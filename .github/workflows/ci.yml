name: Tests master

on:
  # This avoids having duplicate builds for a pull request
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ############################################################################
  # Lint jobs
  ############################################################################
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-3.9-pip-${{ hashFiles('**/setup.py') }}
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: Install node dependencies
        run: cd lektor/admin && npm ci
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install python dependencies
        run: python -m pip install --editable .[test]
      - name: Show python environment
        run: python -m pip list
      - name: Run pylint
        run: pylint lektor
      - name: Run pre-commit
        run: pre-commit run -a

  ############################################################################
  # Smoke tests
  ############################################################################
  linux-smoke-node:
    name: Linux node${{ matrix.NODEJS_VERSION }} smoke test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ["16"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  linux-smoke-py:
    name: Linux py${{ matrix.PYTHON_VERSION }} smoke test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ["3.9"]
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install python dependencies
        run: python -m pip install --editable .[test] codecov
      - name: Show python environment
        run: python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09

  ############################################################################
  # Node tests
  ############################################################################
  node:
    name: ${{ matrix.os}} node${{ matrix.NODEJS_VERSION }} tests
    runs-on: ${{ matrix.os }}
    needs: linux-smoke-node
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ["14"]
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        include:
          - NODEJS_VERSION: "12"
            os: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  ############################################################################
  # Python tests
  ############################################################################
  python-tests:
    name: ${{ matrix.os }} py${{ matrix.PYTHON_VERSION }} tests
    runs-on: ${{ matrix.os }}
    needs: linux-smoke-py
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        PYTHON_VERSION: ["3.6", "3.9"]
        include:
          - os: "ubuntu-latest"
            path: ~/.cache/pip
          - os: "macos-latest"
            path: ~/Library/Caches/pip
          - os: "windows-latest"
            path: ~\AppData\Local\pip\Cache
          - os: "ubuntu-latest"
            path: ~/.cache/pip
            PYTHON_VERSION: "3.7"
        exclude:
          - os: "ubuntu-latest"
            PYTHON_VERSION: "3.9"
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install macOS system dependencies
        if: startsWith(runner.os, 'macos')
        run: brew install imagemagick ffmpeg
      - name: Install Windows system dependencies
        if: startsWith(runner.os, 'windows')
        run: choco install --no-progress --timeout 600 imagemagick.tool ffmpeg
      - name: Install python dependencies
        run: python -m pip install --editable .[test] codecov
      - name: Show python environment
        run: python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09
