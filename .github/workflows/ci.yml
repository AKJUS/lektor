name: Tests master

on:
  # This avoids having duplicate builds for a pull request
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  ############################################################################
  # Lint jobs
  ############################################################################
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-3.9-pip-${{ hashFiles('**/setup.py') }}
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install node dependencies
        run: cd lektor/admin && npm ci
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Install python dependencies
        run: python -m pip install --editable .[test]
      - name: Show python environment
        run: python -m pip list
      - name: Run pylint
        run: pylint lektor
      - name: Run pre-commit
        run: pre-commit run -a

  ############################################################################
  # Smoke tests
  ############################################################################
  linux-smoke-node:
    name: Linux node${{ matrix.NODEJS_VERSION }} smoke test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ['14']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  linux-smoke-py:
    name: Linux py${{ matrix.PYTHON_VERSION }} smoke test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09

  ############################################################################
  # Node tests
  ############################################################################
  linux-node:
    name: Linux node${{ matrix.NODEJS_VERSION }} tests
    runs-on: ubuntu-latest
    needs: linux-smoke-node
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ['12', '16']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  mac-node:
    name: Mac node${{ matrix.NODEJS_VERSION }} tests
    runs-on: macos-latest
    needs: linux-smoke-node
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ['14']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  win-node:
    name: Win node${{ matrix.NODEJS_VERSION }} tests
    runs-on: windows-latest
    needs: linux-smoke-node
    strategy:
      fail-fast: false
      matrix:
        NODEJS_VERSION: ['14']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install node dependencies
        run: cd lektor/admin && npm ci && npm run webpack
      - name: Typecheck and run frontend tests
        run: cd lektor/admin && npx tsc && npm test

  ############################################################################
  # Python tests
  ############################################################################
  linux-py:
    name: Linux py${{ matrix.PYTHON_VERSION }} tests
    runs-on: ubuntu-latest
    needs: linux-smoke-py
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.6', '3.7']
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09


  mac-py:
    name: Mac py${{ matrix.PYTHON_VERSION }} tests
    runs-on: macos-latest
    needs: linux-smoke-py
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.6', '3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install system dependencies
        run: |
          brew install imagemagick
          brew install ffmpeg
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09


  win-py:
    name: Win py${{ matrix.PYTHON_VERSION }} tests
    runs-on: windows-latest
    needs: linux-smoke-py
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.6', '3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**\setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install system dependencies
        run: |
          choco install --no-progress --timeout 600 imagemagick.tool
          choco install --no-progress --timeout 600 ffmpeg
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09
